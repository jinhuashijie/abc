解答一下前面遇到的问题：
首先我认为本尊是因为没有在理论的基础上去多勤加练习，或者遇到问题了没有自己去独立思考解决方案。
像同步不到，用VSCODE这些工具只是一个示例，让开发者直观地看到历史版本流的涌动；同步即可以设置成自动的，
也可以手动更新，一般情况下最好手动更新代码，然后跑通代码，看看本版本比上一版本升级了什么？
（若没有比上一版本更进一步，就没必要合并到主干，所以接下还理解分支的概念。）
以上情况是没有分支合并到主干的，是直接在主干上更改的，所以就要手动更新代码审查一下上一版本修改了什么，
会不会在自己当前要修改部分，如果是问题的正确答案且是进步的可以覆盖对方的代码，反而多次遇到冲突了会知道怎样应对。


git学习提纲
1、上一节学会了搭建类SVN服务器这些，并学会了初步的提交代码；
2、在服务器搭建方面好像是我这边测通了流程，对方并没有完全掌握以上原理；
3、初步会提交代码及比对代码，对方并没有掌握协作管理历史版本能力。不要老是纠结在工具的研究上；
4、请写出GIT管理的流程？事情就是一问一答解决问题，那么简单。修订一本书如此，修订项目代码需要干什么？
5、请制定修订项目代码的下一步方案：我暂时的回答，是所做的修改能实现什么，而不是对方提出什么，比方说跑通一个REACT-CLI架构，
搭建一个骨架。。(开发项目是思考如何解决一个问题的，而不是让您来遇到REACT后台服务无法启动又提出另一个问题的)，如果后台服务不能启动，
我可以启动哪不是项目由我来主导，你干什么吃的？

