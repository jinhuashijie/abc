以下文档格式严重有误，发现对方是用来创造问题的，不是解决问题的，一片ERROR:
自己独立思考下怎样解决：用JS文件用来写中文的，注意命名及格式问题并更改过来。


1： 管理者在settings里面增加开发者； 然后获取一个连接
2： 把这个连接给其他协作者， 其他协作者打开连接， 会出现同意选项， 点击同意
3： 协作者在本地克隆公共仓库， 然后修改里面的代码， 然后正常提交， 正常推送
4： 本地仓库如果过一段时间没有操作， 就要点击同步， 这个同步的意思就是会把远程
仓库了别人更新的东西合并到本地仓库
回答：写一个问题要简洁有力，言简意赅！
5： 存在的问题， 有时候反应极慢， 半个小时以后才能看到推送的东西
6： 会显示挂起的更改， 代表还没add的， 需要提交， 再commit， 再push
回答：这不是一个博客，问一句答一句，是本段代码如果自己要修改的同时对方也做了修改，就要进行代码比对，看实现了什么。
若对方做了无效修改，有什么意义。真要冲突，要学会：对方也是为实现这个功能点留给它解决的时间，解决不了就追解决，你也要在这改就你亲自解决，进行冲突对比确认。
除非压根不是奔这儿去的。
回答：这里注意段落换行///////////
查看版本差异对比的详细步骤：
1： 点击右上角--实心方块（ git view history - git log）
2： 会出现所有的历史提交记录-- - 反应速度相当慢，
回答：可能有些设置不太明确，像更新这些本来就是有经验的程序人员可以感知得到，迅速反应，或者服务端问题，或者客户端问题。像你这个，
同时有程序原因，又有最根本的对历史版本管理流程不熟悉的因素，每天打开项目时都要更新一下代码，当然你可以设置自动同步的。。
工具是用来让你对代码的历史版本进行管理的，跟以前的备案登记差不多，有问题就记录一下，现在不同了，是有问题就解决一下。
3： 点击其中一条记录； 底部会出现文件名， 以及修改的时间之类的，
4： 点击文件名字 顶部会出现选项
1: view file contents-- - 会显示控制台--命令行记录
    //跟工作区文件相比较
2: compare against workspace file-- - 会显示两个更改前后的对比； 有绿有红， 有加有减
    //与以前版本相比较
3: compare against previous version-- - 也是一样的显示对比的差异--更改
回答：开始就是给你练习解决冲突的，直接在主干上才两个改代码，很容易协调。每次改之前更新一下代码看情况。
4: view file history
5： 修改文件之后一保存， git插件图标就会自动显示修改文件的数量，
6： 点击左上角偏右的三个横点， 展开选项， 点击暂存所有更改--再点击提交所有更改--输入备注信息-- - 再点击推送--就可以成功推送了
7： 每一次打开的时候都要注意pull， 与远程仓库同步， 但是还需要恢复某些自己不想被覆盖的文件。
